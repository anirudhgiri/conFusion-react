{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","this","setState","values","postComment","dishId","rating","author","comment","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","handleSubmit","Row","Label","htmlFor","Col","md","select","model","input","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","resetFeedbackForm","role","text","size","offset","checkbox","About","RenderLeader","Media","left","object","body","heading","CardHeader","title","leaders","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","message","actions","reset","addLeaders","feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38489470.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"/>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl'\r\n\r\nfunction RenderMenuItem({dish, onClick}){\r\n    return(\r\n                    <Card>\r\n                        <Link to={`/menu/${dish.id}`}>\r\n                            <CardImg width=\"100%\" src={baseUrl+dish.image} alt={dish.name}/>\r\n                            <CardImgOverlay>\r\n                                <CardTitle>{dish.name}</CardTitle>\r\n                            </CardImgOverlay>\r\n                        </Link>\r\n                    </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map(dish => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish = {dish}/>\r\n            </div>\r\n        );\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    else{\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                        {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React,{Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n    class CommentForm extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                isModalOpen: false\r\n            };\r\n\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            })\r\n        }\r\n\r\n        handleSubmit(values){\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <>\r\n\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"/>Submit Comment</Button>\r\n            \r\n                <Modal isOpen = {this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit = {(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" className=\"ml-3\">Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className = \"form-group\">\r\n                                <Label htmlFor=\"author\" className=\"ml-3\">Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.input model=\".author\" \r\n                                    name=\"author\" \r\n                                    className=\"form-control\" \r\n                                    placeholder={\"Your Name\"}\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className = \"form-group\">\r\n                                <Label htmlFor=\"comment\" className=\"ml-3\">Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea rows={6} model=\".comment\" name=\"comment\" className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                \r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n   function RenderDish({dish}){\r\n        if(dish != null){\r\n            return (\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <FadeTransform\r\n                        in\r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                            <Card>\r\n                                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                                <CardBody>\r\n                                    <CardTitle>{dish.name}</CardTitle>\r\n                                    <CardText>{dish.description}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </FadeTransform>\r\n                    </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n\r\n        if(comments != null){\r\n            return (\r\n                <div className = \"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                    <Fade in>\r\n                                        <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                            );\r\n                        })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId = {dishId} postComment = {postComment}/>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const DishDetail = (props) => {\r\n        if(props.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(props.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(props.dish != null)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                    \r\n                        <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}  />\r\n\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler,Collapse, NavItem, Button, \r\n    Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen:false,\r\n            isModalOpen:false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState( {\r\n            isNavOpen : !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState( {\r\n            isModalOpen : !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username : \"+ this.username.value + \"Password : \" + this.password.value\r\n        + \"Remember: \"+ this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand href=\"/\" className=\"mr-auto\"> \r\n                            <img src=\"./assets/images/logo.png\" width=\"41\" height=\"30\"\r\n                            alt=\"Ristonrante Con Fusion\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n\r\n                            <Nav className=\"ml-auto\">\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"/>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className = \"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Login\r\n                    </ModalHeader>\r\n\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components'\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n\r\n    else if(errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        )\r\n    }\r\n\r\n    else{\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val)|| (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    \r\n    \r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href = \"skype:skype-name chat\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us Your Feedback</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );}\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport {Stagger, Fade} from 'react-animation-components';\n\nfunction About(props) {\n\n    const leaders = () => {\n        if(props.leaders.isLoading){\n            return(\n                <Loading/>\n            );\n        }\n\n        else if(props.leaders.errMess){\n            return(\n                <h4>{props.leaders.errMess}</h4>\n            )\n        }\n\n        else{\n            return(\n                <Stagger in>\n                {props.leaders.leaders.map((leader) => {\n                    return (\n                        <Media list>\n                            <RenderLeader leader={leader}/>\n                        </Media>\n                    )})}\n                </Stagger>\n            );\n        }\n    }\n\n    function RenderLeader(props){\n        return(\n                <Fade in>\n                    <Media key={props.leader.id} className=\"m-3\">\n                        <Media left className=\"mr-3\">\n                            <Media object src={baseUrl+props.leader.image} alt=\"Alberto\"/>\n                        </Media>\n                        <Media body>\n                            <Media heading>{props.leader.name}</Media>\n                            <p>{props.leader.designation}</p>\n                            {props.leader.description}\n                        </Media>\n                    </Media>\n                </Fade>\n        );\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                        {leaders()}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId : dishId,\r\n    rating : rating,\r\n    author : author,\r\n    comment : comment\r\n  }\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl+'comments',{\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        throw error;\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n  return fetch(baseUrl+'feedback',{\r\n    method: \"POST\",\r\n    body: JSON.stringify(feedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        throw error;\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => alert(JSON.stringify(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) \r\n          return response;\r\n         \r\n        else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) \r\n        return response;\r\n       \r\n      else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}","export const ADD_DISHES = \"ADD_DISHES\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\n\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\n\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\n\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from 'react';\r\nimport Menu  from './MenuComponent.js';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent.js';\r\nimport Footer from './FooterComponent.js';\r\nimport Home from './HomeComponent.js';\r\nimport Contact from './ContactComponent.js';\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport About from './AboutComponent.js';\r\nimport {connect} from 'react-redux';\r\nimport  {postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback} from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\n\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\n\r\nclass Main extends Component{\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render(){\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leaderLoading = {this.props.leaders.isLoading}\r\n        leaderErrMess = {this.props.leaders.errMess}\r\n    />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    return(\r\n      <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key = {this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location = {this.props.location}>\r\n              <Route path=\"/home\" component={HomePage}/>\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes = {this.props.dishes}/>}/>\r\n              <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders = {this.props.leaders}/>}/>\r\n              <Redirect to=\"/home\"/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {isLoading:true, errMess:null, dishes: []}, action) =>{\r\n    switch(action.type){\r\n\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n        \r\n        case ActionTypes.DISHES_LOADING:\r\n            return{...state, isLoading:true, errMess:null, dishes:[]}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {isLoading : true, errMess : null, leaders : []}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n            \r\n        case ActionTypes.LEADERS_LOADING:\r\n            return{...state, isLoading:true, errMess:null, leaders:[]}\r\n    \r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        \r\n        default:\r\n            return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main  from './components/MainComponent.js';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {configureStore} from './redux/configureStore.js';\n\nconst store = configureStore();\n\nclass App extends Component{\n\n  render(){\n    return(\n      <Provider store={store}>\n        <BrowserRouter>\n        <div>\n            <Main/>\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}